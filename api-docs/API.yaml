openapi: 3.0.0
info:
  version: '1.0.0'
  title: 'Online-LMS APIs'
  description: 'List of REST APIs Documentation for Online Learning Management System'
  contact:
    name: Palden Sherpa
    email: sherpalden369@gmail.com
servers: 
  - url: http://localhost:5000
    description: Local Server
    
  - url: https://aiex-olms.herokuapp.com
    description: Heroku Server

paths:
  /api/admin/register:
    post:
      tags:
        - Admin Authentication
      description: Register new admin.
      requestBody:
        required: true
        content: 
          application/json:
            schema:
              type: object
              properties:
                firstName:
                  type: string
                  example: Palden
                lastName:
                  type: string
                  example: Sherpa
                email:
                  type: string
                  example: sherpalden369@gmail
                role:
                  type: string
                  example: admin-1
                password:
                  type: string
                  example: Password_123
                  
      responses:
        201:
          description: Registration Successful.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Registration Successful"

  /api/admin/login:
    post:
      tags:
        - Admin Authentication
      description: Login admin.
      requestBody:
        required: true
        content: 
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: sherpalden369@gmail.com
                password:
                  type: string
                  example: Password_123
      responses:
        202:
          description: Login Successful.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Login Successful
                  accessToken:
                    example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySUQiOiJpVFVrS0M4T0IiLCJlbWFpbCI6InNoZXJwYWxkZW4zNjlAZ21haWwuY29tIiwiaWF0IjoxNjAyNTc4MTI2LCJleHAiOjE2MDI2MzgxMjZ9.xI_Y5EGPZP8E0RgAwtdIIDdDvkXF2Zdoa1p0z9nKDbA

  /api/admin/forgotPassword:
    put:
      tags:
        - Admin Authentication
      description: Process password reset request.
      requestBody:
        required: true
        content: 
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: sherpalden369@gmail.com
      responses:
        200:
          description: Password reset request processed and reset link has been sent to the email, sherpalden369@gmail.com
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Password reset request successfully processed and reset link is sent to the email, sherpalden369@gmail.com

  /api/admin/resetPassword:
    put:
      tags:
        - Admin Authentication
      description: Change old password and set new one.
      requestBody:
        required: true
        content: 
          application/json:
            schema:
              type: object
              properties:
                newPassword:
                  type: string
                  example: sherpalden369@gmail.com
                resetToken:
                  type: string
                  example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySUQiOiJpVFVrS0M4T0IiLCJlbWFpbCI6InNoZXJwYWxkZW4zNjlAZ21haWwuY29tIiwiaWF0IjoxNjAyNTc4MTI2LCJleHAiOjE2MDI2MzgxMjZ9.xI_Y5EGPZP8E0RgAwtdIIDdDvkXF2Zdoa1p0z9nKDbA
      responses:
        200:
          description: Old password removed and new password set.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Password Reset Successful


#******
#******
#******
#******
#******
#******

  /api/admin/news/add-main-category:
    post:
      tags:
        - News Category APIs - Admin
      description: Add main news category
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content: 
          application/json:
            schema:
              type: object
              properties:
                categoryName:
                  type: string
                  example: Science and myths
                  
      responses:
        201:
          description: Response on successful addition of main news category
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "News main category addition successful"


  /api/admin/news/add-sub-category:
    post:
      tags:
        - News Category APIs - Admin
      description: Add sub category for news
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content: 
          application/json:
            schema:
              type: object
              properties:
                categoryName:
                  type: string
                  example: Animal
                parentID:
                  type: string
                  example: adfadf7987sdfs98798sdf
                  
      responses:
        201:
          description: Response on successful addition of sub category
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "News sub category addition successful"


  /api/admin/news/rename-category:
    put:
      tags:
        - News Category APIs - Admin
      description: Rename a category for news
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content: 
          application/json:
            schema:
              type: object
              properties:
                newName:
                  type: string
                  example: Animal
                categoryID:
                  type: string
                  example: adfadf7987sdfs98798sdf
                  
      responses:
        201:
          description: Response on successful rename of a category
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Category rename successful"


  /api/admin/news/delete-category/{categoryID}:
    delete:
      tags:
        - News Category APIs - Admin
      description: Deletes all the sub categories and news associated with them including the category itself.
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: categoryID
      responses:
        201:
          description: Response on successful deletion of a category
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Category delete successful"


  /api/admin/news/all-categories:
    get:
      tags:
        - News Category APIs - Admin
      description: Get all category list
      security:
        - bearerAuth: []
      responses:
        201:
          description: Response on successful retrieval of all category list
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "All category list retrieval successful"


  /api/admin/news/all-category-tree:
    get:
      tags:
        - News Category APIs - Admin
      description: Get all category list in tree view
      security:
        - bearerAuth: []
      responses:
        201:
          description: Response on successful retrieval of all category list in tree view
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "All category list retrieval in tree view successful"


#******
#******
#******
#******
#******
#******

  /api/admin/news/upload-images:
    post:
      tags:
        - News APIs - Admin
      description: Upload news images
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content: 
          multipart/form-data:
            schema:
              type: object
              properties:
                files:
                  type: array
                  items:
                    type: string
                    format: binary
              
      responses:
        200:
          description: Response on successful upload of news images
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: News Images Upload Successful
  
  /api/admin/news:
    post:
      tags:
        - News APIs - Admin
      description: Create a news post
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content: 
          multipart/form-data:
            schema:
              type: object
              properties:
                # files:
                #   type: array
                #   items:
                #     type: string
                #     format: binary
                images:
                  type: array
                  example: ["img1.jpg", "img2.jpg"]
                title:
                  type: string
                  example: Nepal is a agricultural country but we import agro products from India.
                categoryID:
                  type: string
                  example: 345dght56757ghjg678
                description:
                  type: string
                  example: News description here
                youtubeLink:
                  type: string
                  example: https://youtu.be/QNInfBuBcOA
                publishingAt:
                  type: string
                  example: 2020-20-1
      responses:
        200:
          description: Response on successful creation of news post.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: News Post Creation Successful


  /api/admin/news/{newsID}:
    get:
      tags:
        - News APIs - Admin
      description: Get the details data of the particular news post
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: newsID
      responses:
        200:
          description: Response on successful retrieval of detail data of the particular news post
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: News post details retrieval successful

    put:
      tags:
        - News APIs - Admin
      description: Update a news post
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: newsID
      requestBody:
        required: true
        content: 
          multipart/form-data:
            schema:
              type: object
              properties:
                files:
                  type: array
                  items:
                    type: string
                    format: binary
                title:
                  type: string
                  example: Nepal is a agricultural country but we import agro products from India.
                categoryID:
                  type: string
                  example: 345dght56757ghjg678
                description:
                  type: string
                  example: News description here
                metaTags:
                  type: array
                  example: ["tag-1", "tag-2", "tag-3"]
                youtubeLink:
                  type: string
                  example: https://youtu.be/QNInfBuBcOA
                imagesToBeDeleted:
                  type: array
                  example: ["img-1.jpg", "img-2.jpg"]
                publishingAt:
                  type: string
                  example: 2020-20-1
      responses:
        200:
          description: Response on successful udpate of news post.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: News Update Successful

    delete:
      tags:
        - News APIs - Admin
      description: Delete a news post
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: newsID
      responses:
        200:
          description: Response on successful deletion of news post.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: News delete Successful


  /api/admin/news/all-news/{categoryID}:
    get:
      tags:
        - News APIs - Admin
      description: Get all the news of the particular categoryID
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: categoryID
      responses:
        200:
          description: Response on successful retrieval of news of particular categoryID
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: News posts of particular categoryID retrieval successful

    delete:
      tags:
        - News APIs - Admin
      description: Delete all news of particular categroyID
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: categoryID
      responses:
        200:
          description: Response on successful deletion of news of particular categoryID
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: News of particular category delete Successful


  /api/admin/news/set-thumbnail/{newsID}:
    put:
      tags:
        - News APIs - Admin
      description: Set a thumbnail image for a news post
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: newsID
      requestBody:
        required: true
        content: 
          application/json:
            schema:
              type: object
              properties:
                thumbnailImage:
                  type: string
                  example: img-1.jpg
      responses:
        200:
          description: Response on successful set of thumbnail image for news post.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: News thumbnail image set Successful


#******
#******
#******
#******
#******
#******

  /api/user/news/all-categories:
    get:
      tags:
        - News Category APIs - User
      description: Get all category list
      responses:
        201:
          description: Response on successful retrieval of all category list
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "All category list retrieval successful"


  /api/user/news/all-category-tree:
    get:
      tags:
        - News Category APIs - User
      description: Get all category list in tree view
      responses:
        201:
          description: Response on successful retrieval of all category list in tree view
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "All category list retrieval in tree view successful"


  /api/user/news/{newsID}:
    get:
      tags:
        - News APIs - User
      description: Get the details data of the particular news post
      parameters:
        - in: path
          name: newsID
      responses:
        200:
          description: Response on successful retrieval of detail data of the particular news post
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: News post details retrieval successful


  /api/user/news/all-news/{categoryID}:
    get:
      tags:
        - News APIs - User
      description: Get all the news of the particular categoryID
      parameters:
        - in: path
          name: categoryID
      responses:
        200:
          description: Response on successful retrieval of news of particular categoryID
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: News posts of particular categoryID retrieval successful

#******
#******
#******
#******
#******
#******

  /api/admin/dictionary:
    post:
      tags:
        - Dictionary APIs - Admin
      description: Create a dictionary post
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content: 
          multipart/form-data:
            schema:
              type: object
              properties:
                files:
                  type: array
                  items:
                    type: string
                    format: binary
                keyword:
                  type: string
                  example: Frame
                description:
                  type: string
                  example: It is a structural design of building.
                youtubeLinks:
                  type: array
                  example: ["https://youtu.be/QNInfBuBcOA"]
                relatedWords:
                  type: array
                  example: ["beam", "building", "structure"]
      responses:
        200:
          description: Response on successful creation of dictionary post.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: dictionary Post Creation Successful


  /api/admin/dictionary/bulk-upload:
    post:
      tags:
        - Dictionary APIs - Admin
      description: Bulk upload dictionary
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content: 
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                  
      responses:
        200:
          description: Response on successful bulk upload of dictionary
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: dictionary bulk upload Successful


  /api/admin/dictionary/{dictionaryID}:
    put:
      tags:
        - Dictionary APIs - Admin
      description: Update a dictionary post
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: dictionaryID
      requestBody:
        required: true
        content: 
          multipart/form-data:
            schema:
              type: object
              properties:
                files:
                  type: array
                  items:
                    type: string
                    format: binary
                imagesToBeDeleted:
                  type: array
                  example: ["img-1.jpg", "img-2.jpg"]
                keyword:
                  type: string
                  example: Frame
                description:
                  type: string
                  example: It is a structural design of building.
                youtubeLinks:
                  type: array
                  example: ["https://youtu.be/QNInfBuBcOA"]
                relatedWords:
                  type: array
                  example: ["beam", "building", "structure"]
      responses:
        200:
          description: Response on successful Update of dictionary post.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: dictionary Post Update Successful

    delete:
      tags:
        - Dictionary APIs - Admin
      description: Delete a dictionary post
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: dictionaryID
      responses:
        200:
          description: Response on successful Delete of dictionary post.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: dictionary Post Delete Successful


  /api/admin/dictionary/search:
    get:
      tags:
        - Dictionary APIs - Admin
      description: Search a dictionary post
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: searchKey
        - in: query
          name: skips
        - in: query
          name: limit
     
      responses:
        200:
          description: Response on successful Search of dictionary post.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: dictionary Post Search Successful


#******
#******
#******
#******
#******
#******


#******
#******
#******
#******
#******
#******


  /api/admin/book/add-main-category:
    post:
      tags:
        - Book APIs - Admin
      description: Add main book category
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content: 
          application/json:
            schema:
              type: object
              properties:
                categoryName:
                  type: string
                  example: Science and myths
                  
      responses:
        200:
          description: Response on successful addition of main book category
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "book main category addition successful"


  /api/admin/book/add-sub-category:
    post:
      tags:
        - Book APIs - Admin
      description: Add sub category for book
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content: 
          application/json:
            schema:
              type: object
              properties:
                categoryName:
                  type: string
                  example: Animal
                parentID:
                  type: string
                  example: adfadf7987sdfs98798sdf
                  
      responses:
        200:
          description: Response on successful addition of sub category
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "book sub category addition successful"


  /api/admin/book/rename-category:
    put:
      tags:
        - Book APIs - Admin
      description: Rename a category for book
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content: 
          application/json:
            schema:
              type: object
              properties:
                newName:
                  type: string
                  example: Animal
                categoryID:
                  type: string
                  example: adfadf7987sdfs98798sdf
                  
      responses:
        200:
          description: Response on successful rename of a category
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Category rename successful"


  # /api/admin/book/delete-category/{categoryID}:
  #   delete:
  #     tags:
  #       - Book APIs - Admin
  #     description: Deletes all the sub categories and book associated with them including the category itself.
  #     security:
  #       - bearerAuth: []
  #     parameters:
  #       - in: path
  #         name: categoryID
  #     responses:
  #       200:
  #         description: Response on successful deletion of a category
  #         content:
  #           application/json:
  #             schema:
  #               type: object
  #               properties:
  #                 message:
  #                   type: string
  #                   example: "Category delete successful"


  /api/admin/book/all-categories:
    get:
      tags:
        - Book APIs - Admin
      description: Get all category list of Books
      security:
        - bearerAuth: []
      responses:
        200:
          description: Response on successful retrieval of all category list
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "All category list retrieval successful"




  /api/admin/book:
    post:
      tags:
        - Books APIs - Admin
      description: Create a book post
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content: 
          multipart/form-data:
            schema:
              type: object
              properties:
                thumbnail:
                  type: string
                  format: binary
                bookPdf:
                  type: string
                  format: binary
                title:
                  type: string
                  example: Earthquake Resistent Building Design
                authors:
                  type: array
                  items:
                    type: object
                    properties:
                      firstName:
                        type: string
                        example: Palden
                      lastName:
                        type: string
                        example: Sherpa
                edition:
                  type: string
                  example: 2nd(Updated)
                abstract:
                  type: string
                  example: It is a structural design of building.
                categoryID:
                  type: string
                  example: 5454sdfasd54545sdf
                publisher:
                  type: string
                  example: Cambridge University Press
                publicationDate:
                  type: string
                  example: 2020-01-02
                isbn:
                  type: string
                  example: 978-3-16-148410-0
                doi:
                  type: string
                  example: 10.1371/journal.pgen.1001111
      responses:
        200:
          description: Response on successful creation of book post.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: book Post Creation Successful


  /api/admin/book/update-details/{bookID}:
    put:
      tags:
        - Books APIs - Admin
      description: Update a book post
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: bookID
      requestBody:
        required: true
        content: 
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: Earthquake Resistent Building Design
                authors:
                  type: array
                  items:
                    type: object
                    properties:
                      firstName:
                        type: string
                        example: Palden
                      lastName:
                        type: string
                        example: Sherpa
                edition:
                  type: string
                  example: 2nd(Updated)
                abstract:
                  type: string
                  example: It is a structural design of building.
                categoryID:
                  type: string
                  example: 5454sdfasd54545sdf
                publisher:
                  type: string
                  example: Cambridge University Press
                publicationDate:
                  type: string
                  example: 2020-01-02
                isbn:
                  type: string
                  example: 978-3-16-148410-0
                doi:
                  type: string
                  example: 10.1371/journal.pgen.1001111
      responses:
        200:
          description: Response on successful update of book post.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: book Post Update Successful


  /api/admin/book/update-files/{bookID}:
    put:
      tags:
        - Books APIs - Admin
      description: Update a book files
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: bookID
      requestBody:
        required: true
        content: 
          multipart/form-data:
            schema:
              type: object
              properties:
                thumbnail:
                  type: string
                  format: binary
                pdf:
                  type: string
                  format: binary
                
      responses:
        200:
          description: Response on successful update of book files.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: book files Update Successful


  /api/admin/book/{bookID}:
    get:
      tags:
        - Books APIs - Admin
      description: Get details of a book
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: bookID
      responses:
        200:
          description: Response on successful retrieval of book details.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: book details retrieval Successful

    delete:
      tags:
        - Books APIs - Admin
      description: Delete a book post
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: bookID
      responses:
        200:
          description: Response on successful deletion of book post.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: book Post Delete Successful


  /api/admin/book/all-books/{categoryID}:
    get:
      tags:
        - Books APIs - Admin
      description: Get all books of particular topic
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: categoryID
        - in: query
          name: skips
        - in: query
          name: limit
      responses:
        200:
          description: Response on successful retrieval of books of particular categoryID.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Books of particular categoryID retrieval successful

#******
#******
#******
#******
#******
#******


#******
#******
#******
#******
#******
#******

  /api/admin/course/add-main-category:
    post:
      tags:
        - Course APIs - Admin
      description: Add main course category
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content: 
          application/json:
            schema:
              type: object
              properties:
                categoryName:
                  type: string
                  example: Science and myths
                  
      responses:
        200:
          description: Response on successful addition of main course category
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Course main category addition successful"


  /api/admin/course/add-sub-category:
    post:
      tags:
        - Course APIs - Admin
      description: Add sub category for course
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content: 
          application/json:
            schema:
              type: object
              properties:
                categoryName:
                  type: string
                  example: Animal
                parentID:
                  type: string
                  example: adfadf7987sdfs98798sdf
                  
      responses:
        200:
          description: Response on successful addition of sub category
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Course sub category addition successful"


  /api/admin/course/rename-category:
    put:
      tags:
        - Course APIs - Admin
      description: Rename a category for course
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content: 
          application/json:
            schema:
              type: object
              properties:
                newName:
                  type: string
                  example: Animal
                categoryID:
                  type: string
                  example: adfadf7987sdfs98798sdf
                  
      responses:
        200:
          description: Response on successful rename of a category
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Category rename successful"


  /api/admin/course/all-categories:
    get:
      tags:
        - Course APIs - Admin
      description: Get all category list of Books
      security:
        - bearerAuth: []
      responses:
        200:
          description: Response on successful retrieval of all category list
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "All category list retrieval successful"

#******
#******
#******
#******
#******
#******


components:
  securitySchemes:
    bearerAuth:           
      type: http
      scheme: bearer
      bearerFormat: JWT  
